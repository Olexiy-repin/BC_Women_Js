/*
 * –ö–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü—ñ—ó, —Ñ—É–Ω–∫—Ü—ñ—ó –≤–∏—â–æ–≥–æ –ø–æ—Ä—è–¥–∫—É
 */

// const greet = function (callback) {
//   // let callback = function (firstName) {
//   //   console.log(`Hello ${firstName}`);
//   // };

//   const userName = prompt('–í–∞—à–µ —ñ–º º—è');

//   callback(userName);
// };

// const simpleGreet = function (firstName) {
//   console.log(`Hello ${firstName}`);
// };

// const prettyGreet = function (firstName) {
//   console.log(`Welcome ${firstName}! üôã‚Äç‚ôÇÔ∏è`);
// };

// greet(simpleGreet);
// greet(prettyGreet);

//? –ó–∞–ø–∏—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä
// const fetchUser = async function (userUrl, callback) {
//   const response = await fetch(`https://api.github.com/users/${userUrl}`);
//   const result = await response.json();

//   callback(result);
// };

// const showInfoAboutUser = function (user) {
//   console.log(user);
// };

// fetchUser('olexiy-repin', showInfoAboutUser);

//? –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –ø–æ–¥—ñ–π –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
// const userEmail = document.querySelector('.js-contact-form-email');

// const logValues = function () {
//   console.log('Hi!');
// };

// userEmail.addEventListener('change', logValues);

/*
? –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é each(array, callback), —è–∫–∞ –ø–µ—Ä—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –æ—á—ñ–∫—É—î –º–∞—Å–∏–≤, –∞ –¥—Ä—É–≥–∏–º - —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –∑–∞—Å—Ç–æ—Å–æ–≤—É—î—Ç—å—Å—è –¥–æ –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É.
? –§—É–Ω–∫—Ü—ñ—è each –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ —è–∫–æ–≥–æ –±—É–¥—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≤–∏–∫–ª–∏–∫—É –∫–æ–ª–±–±–µ–∫–∞.
*/
// const numbers = [1, 2, 3, 4, 5];

// const each = function (array, callback) {
//   const newArray = [];

//   for (const item of array) {
//     newArray.push(callback(item));
//   }

//   return newArray;
// };

// const multi = function (el) {
//   return el * 2;
// };

// const add = function (el) {
//   return el + 2;
// };

// console.log(each(numbers, multi));
// console.log(each(numbers, add));

/*
? –ù–∞–ø–∏—à—ñ—Ç—å —Ç–∞–∫—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:
? createProduct(product, callback) - –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É –±–µ–∑ id, –∞ —Ç–∞–∫–æ–∂ –∫–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü—ñ—é.
? –§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É, –¥–æ–¥–∞—é—á–∏ –π–æ–º—É —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–æ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ id —ñ –≤–∏–∫–ª–∏–∫–∞—î –∫–æ–ª–±–µ–∫ –ø–µ—Ä–µ–¥–∞—é—á–∏ –π–æ–º—É —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –æ–±'—î–∫—Ç.
? logProduct(product) - –∫–æ–ª–ª–±–µ–∫, —â–æ –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É —ñ –ª–æ–≥—É—î –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å
? logTotalPrice(product) - –∫–æ–ª–ª–±–µ–∫, —â–æ –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É —ñ –ª–æ–≥—ñ—é—î –∑–∞–≥–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É –≤ –∫–æ–Ω—Å–æ–ª—å
*/
const createProduct = function (product, callback) {
  const newProduct = {
    id: Date.now(),
    ...product,
  };

  callback(newProduct);
};

const logProduct = function (product) {
  console.log(product);
};

const logTotalPrice = function ({ price, quantity } = {}) {
  console.log(`Total price: ${price * quantity}`);
};

createProduct({ name: 'üçé', price: 30, quantity: 3 }, logProduct);
createProduct({ name: 'üçé', price: 30, quantity: 3 }, logTotalPrice);

createProduct({ name: 'üçã', price: 20, quantity: 5 }, logProduct);
createProduct({ name: 'üçã', price: 20, quantity: 5 }, logTotalPrice);
